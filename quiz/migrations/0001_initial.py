# Generated by Django 4.1.5 on 2023-06-04 18:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bootstrap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'Bootstrap',
            },
        ),
        migrations.CreateModel(
            name='BootstrapQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='C',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'C#',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Kategori')),
            ],
        ),
        migrations.CreateModel(
            name='CPLUS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'C++',
            },
        ),
        migrations.CreateModel(
            name='CPLUSQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Css',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'Css',
            },
        ),
        migrations.CreateModel(
            name='CssQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Django',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'Django',
            },
        ),
        migrations.CreateModel(
            name='DjangoQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Html',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'Html',
            },
        ),
        migrations.CreateModel(
            name='HtmlQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Java',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'Java',
            },
        ),
        migrations.CreateModel(
            name='JavaQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Python',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorial_Title', models.CharField(max_length=20000)),
                ('tutorial_Body', models.TextField()),
                ('tutorial_Video', embed_video.fields.EmbedVideoField()),
            ],
            options={
                'verbose_name_plural': 'Python',
            },
        ),
        migrations.CreateModel(
            name='PythonQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=100, null=True)),
                ('option_b', models.CharField(max_length=100, null=True)),
                ('option_c', models.CharField(max_length=100, null=True)),
                ('option_d', models.CharField(max_length=100, null=True)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, null=True)),
                ('option_a', models.CharField(max_length=200, null=True)),
                ('option_b', models.CharField(max_length=200, null=True)),
                ('option_c', models.CharField(max_length=200, null=True)),
                ('option_d', models.CharField(max_length=200, null=True)),
                ('correct_option', models.CharField(max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfoStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Yetenek Adı')),
                ('statu', models.IntegerField(default=0, verbose_name='Yetenek Değeri')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=50, verbose_name='Şifre')),
                ('job', models.CharField(default='-', max_length=50, verbose_name='İş')),
                ('image', models.FileField(default='None/download.jpg', upload_to=None, verbose_name='Fotoğraf')),
                ('phone', models.CharField(default='-', max_length=50, verbose_name='Telefon Numarası')),
                ('adress', models.CharField(default='-', max_length=50, verbose_name='Adres')),
                ('status', models.ManyToManyField(to='quiz.userinfostatus', verbose_name='Yetenekler')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
        ),
        migrations.CreateModel(
            name='QuizResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True)),
                ('score', models.IntegerField(null=True)),
                ('correct_questions', models.IntegerField(null=True)),
                ('success_percentage', models.FloatField(null=True)),
                ('incorrect_questions', models.ManyToManyField(null=True, to='quiz.question')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Quiz Adı')),
                ('Qtext', models.TextField(blank=True, max_length=500, null=True, verbose_name='Quiz Açıklması')),
                ('Btext', models.TextField(blank=True, max_length=500, null=True, verbose_name='Quiz Banner')),
                ('date_now', models.DateField(auto_now_add=True, null=True, verbose_name='Tarih')),
                ('süre', models.DurationField(blank=True, null=True, verbose_name='Sınav Süresi')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.category', verbose_name='Kategori')),
            ],
        ),
    ]
